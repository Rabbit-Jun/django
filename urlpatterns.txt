# 서버 구동 시 변화가 감지되면 자동으로 리로더
# 초기화면 views.index 또는 views.main 등으로 해도 된다.(대신 views의 함수 이름도 index 또는 main으로 해야함)

#member의 urls에서 작성하고 있으므로 ''를 해도 localhost:8000/member/ 과 같음
    # .을 하면 하위에 있는 것을 의미한다, 즉 views.index는 view파일의 index함수를 호출 한다는 거임
    # 최상위 폴더의 urls.py에 path를 추가해 줘야 적용됨, 최상위 폴더의 urls를 환경설정 관련된 폴더라 생각

form을 작성하고 전송 하면 특정 값들이 특정 주소로 보내짐
이 때 보내지는 방식이 post와 get이 있음
get방식은 주소에 정보를 입력해서 보내는 것
post방식은 사용자 입력을 통해 정보를 보내는 
사용자가 입력한 폼 데이터 값들을 request 객체를 통해 받는다
(request.GET, request.POST,request.COOKIE )

#localhost:8000/member/createMemo/ ?memoContent=대한민국 이런 식으로 주소에 내용을 담아서 /? ~~형식으로 요청, 이게 get방식
memoContent=request.GET['memoContent'] request.GET [내용]

<form action="http://localhost:8000/member/createMemo/" method="POST" id="">
        <label for="memo">한줄 메모 입력</label> #label과 input의 id가 같아야 라벨을 클릭 했을때 폼에 마우스 포인트가 깜박거림
        <input type="text" id="memo" name="memoContent" size="100" placeholder="이곳에 메모를 작성하시오"> #name은 폼을 전송할때의 이름을 지정하는 거임
</form>
#사용자로부터 데이터를 받아 처리할 수 있는 HTML 폼을 만들고, 그 데이터를 POST 메서드로 http://localhost:8000/member/createMemo/ 주소로 전송
id는 폼 태그와 send 버튼에 id를 통해 매칭시키기 위한 용도 (send버튼이 form태그 안에 있으면 id 굳이 필요 없음)
  <div>
        <button type="submit" form="memoWriteFrom">한 줄 메모 등록하기</button>
    </div>

autocomplete="off" 는 자동완성 off defualt는 on

CrossSiteRequestForgery 특정 사용자가 마치 접속한 것처럼 속여 가짜로 요청을 넣는 행위
csrf를 방지하기 위해 서버에 요청을 넣을 때 토큰을 같이 넣어서 전송
form 태그 옆에 {%csrf_token%}

path('',views.index, name='index') path가 길어지면 이름을 붙여 짧게 부를 수 있게 하는 거임
reverse('index') 하면 경로를 매핑하여 사용할 수 있게 해줌

url맵핑 시 주의사항
1.콤마 빠뜨리지 않았는지 주의
2.슬래쉬 쓸 곳 안쓸곳 잘 정하기
3.캐쉬로 인한 문제인지 확인 
4.action과 url의 주소 일치시키기



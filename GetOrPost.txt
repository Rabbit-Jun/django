get과 post는 http 프로토콜을 통해서 서버에 어떤 값을 전달할 때 사용하는 방식의 종류

URL에 파라미터 값으로 데이터를 전달하면 Get방식이고, Post방식은 URL에 피라미터 정보가 보이지 않는다.
그 이유는 데이터가 Request Body에 포함되서 전달되기 때문에 피라미터가 노출되지 않는다

get방식은 '조회' 이용시 많이 사용되고, Post 방식은 입력(생성), '수정', '삭제'시 많이 사용
    검색의 결과 주소나 링크로써 사용되어지는 경우라면 Get 방식이 많다
URL에 피라미터 정보가 노출되고 당연히 전달되는 데이터 값들도 노출되기 때문에 보안적인 측면에서는 높지 않다
    Post 방식은 값을 숨겨서 전달할 수 있음. SSL 상ㅇ시 높은 보안 수준을 적용할 수 있음.
URL에는 정보를 담을 수 있는 한계가 있다. 그런 경우 Post 방식을 사용하면 된다.
Get 방식은 캐시가 남아있고, 브라우저의 히스토리에 피라미터 정보가 저장되어서 좋지 않을 수 있다.
    -Post 방식의 경우 캐시가 남아있지 않고, 히스토리에 정보가 남지 않음.
    -그러나 캐시 덕분에 속도적인 측면에서는 Post방식보다 좋음.
Post방식은 바이너리 데이터도 전달이 가능하기 때문에 파일 업로드 등을 처리하기 위해서 Post방식 이용


데이터의 조작 또는 변경이 없다면 GET 있다면 POST

GET방식과 POST 방식을 힘께 사용할 수 있다

http://localhost:8000/member/
위와 같은 요청이 있을 때 서버에서는 Get 이냐 Post 냐에 따라서 서로 다른 처리를 할 수가 있다.
Get 방식의 요청은 일반적으로 데이터의 조작이 없으므로 단순하게 글 쓰는 페이지를 요청한걸로 처리할 수 있다.
Post방식의 요청은 데이터의 조작이나 변경이 발생하므로 사용자가 입력 폼을 통해서 데이터 값을 데이터베이스 등에 입력 처리하는 요청으로 넣을 수 있다.
즉, 하나의 요청이지만 어떤 방식으로 전달하느냐에 따라서 전혀 다른 분기 처리를 할 수가 있는 것이다.
이러한 것은 이 CRUD 처리와도 밀접한 관련이 있다.

#Get vs Post 방식 분기 처리
if request.method =="GET":
    return HtppResponse('GET방식 => 글 쓰기 폼 페이지를 보여주세요')
    
if request.method =='POST':
    return HttpResponse('POST방식 => DB에 입력해주세-')
    
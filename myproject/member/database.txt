class 라는 객체를 만들어서 article에 저장
article= class Memo(
    memo_text =memoContent (클래스의 속성)
 )
 article.save() 데이터베이스에 입력

DB에 저장이 안됐다면 
from .models import * #현재 디렉토리에 있는 models.py 파일에서 모든 클래스와 함수를 가져오는 의미입니다. 
모델에서 import 했는지 확인 .은 현재디렉토리를 의미 (이 파일이 있는 폴더)

    #리다이렉트
    # 1.임포트 필요 -from django.http import HttpResponse,HttpResponseRedirect
    # from django.urls import reverse
    #2.redircet() 함수란?
    #   -view페이지 등에서 특정 로직 수행 후 다시 특정 url로 이동시키고자 할 때 사용.
    #3.reverse()함수란?
    #   -URL을 역으로 꼐산하여 path가 변경되어도 URL을 외울 필요 없음
    #   -urls.py에서 만든 urlpattern들의 name을 사용(name의 url을 반환)

return HttpResponseRedirect(reverse('index')) 

입력값을 홈페이지에 리스트뷰 출력하기 위한 방법
    a.출력을 담당하는 별도의 함수를 만든다
    b.기존의 함수를 수정하여 출력
        index(=main)함수를 수정하여 db에서 전체 글 목록을 가져서와서 뿌려줘야 한다.
        이때 템플릿언어를 이용하여 반복문 처리 
        index함수내에서 DB로부터 전체 글 목록을 가져와서 템플릿파일로 전달한다. 
        이때 all()메서드를 이용하여 글 목록 전체를 가져옴 ex)Memo.objects.all()
        아티클 하나하나를 객체(object)라고 생각

    list =Memo.objects.all()
    data= {'list': list} #장고에서는 딕셔너리 타입으로 담아서 템플릿 파일로 전달하는 것을 규정 
    return  render(request,'main.html',data)


    템플릿 문법(태그):
        1. {%         %} #반복처리를 해야 할 때 사용
            ex){% for article in lists %}
            main함수에서 전달한 딕셔너리(나는 data라고 변수명 지정)를 사용 또는 키(나는 list라는 키값 만듬)를 사용
            즉 key를 통해 value 접근
        2. {{         }} 데이터 값을 화면에 출력할 때 사용 


{{i.published_date|date:'Y-m-d'}} 로 하면 연-월-일 로 날짜값 출력 

    